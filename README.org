#+TITLE: .emacs.d - Personal Emacs Configuration
#+AUTHOR: Henning Jansen
#+EMAIL: henning.jansen@jansenh.no
#+DATE: 2025-05-24
#+DESCRIPTION: Personal Emacs configuration settings, updated for 2025
#+KEYWORDS: emacs, configuration
#+LANGUAGE: en
#+STARTUP: overview
#+STARTUP: hidestars
#+OPTIONS: toc:2 num:nil
#+PROPERTY: header-args :eval never-export
#+CATEGORY: configuration
#+FILETAGS: :emacs:config:dotfiles:

* .emacs.d

My Emacs settings - updated 2025

** Introduction

I inherited a set of brilliant Emacs settings from [[https://github.com/magnars][Magnar Sveen]] in 2019.
That setup was geared towards Mac and Norwegian keyboard layout, and I tweaked
parts of it towards US International keys and Linux.

In early 2025 the project with .emacs-d was rebooted when I decided I wanted to
learn more about what goes into the configuration, and realise that I am most
likely stuck with Emacs for life, due to Clojure being my main focus and
Org-mode is my primary way of organizing myself.

This second time over I have also consulted and copied from [[https://github.com/cjohansen][Christian Johansen]]
.emacs.d repo, according to what has been stated in the [[https://github.com/cjohansen/.emacs.d/blob/master/README.md][README.md]]

#+BEGIN_QUOTE
"I recommend starting with a blank emacs + Technomancy's better-defaults
package, and then dig through this repo for useful nuggets, instead of
forking it directly."
#+END_QUOTE

Feel free to clone or copy. Emacs is most recommendable, even though it can be
very intrusive on your daily habits as well as dangerously addictive.

** Setup

The first time you start emacs, it will install some additional packages
that are best handled by the package manager.

In addition, make sure you have:

- cloned [[https://git.sr.ht/~technomancy/better-defaults][Technomancy's better-defaults]]
- Created a custom.el file

** Install emacs on Linux

I have installed Emacs from source, using this guide [[https://arnesonium.com/2023/07/emacs-29-1-on-ubuntu-22-04-lts][Installing Emacs 29.1 on Ubuntu 22.04 LTS]]
by Erik L. Arneson.

** Enable secure auth-source

The configuration is configured with a Anthropic model (currently in the Claude family). You will need an API key to use this function. (See setup-gptel.org).

1. Create a ~/authinfo.gpg file (or something else, remember to update init.el accordingly).

2. Add your API key(s):
   #+BEGIN_SRC text
   machine smart-key-name login apikey password xxx
   #+END_SRC

3. Saving the file from Emacs will generate the encryption.

** Using these emacs settings

- Quit emacs with =C-x r q=, mnemonic /Really Quit/ is easier that Googling how to quit Vim.

- Find file in project with =C-x o=, in dir with =C-x C-f=, recent with =C-x f=

- Autocomplete with =C-.= (autocomplete entire lines with =C-:=)

- Undo with =C-_= and redo with =M-_=. Watch the undo-tree with =C-x u=

** Using Emacs

- =C      = :: Shorthand for the ctrl-key
- =M      = :: Shorthand for the meta-key (bound to cmd on my mac settings)
- =S      = :: Shorthand for the shift-key

*** Editing text

- =C-c d  = :: Duplicate line.

*** Files

- =C-x C-f= :: Open a file. Starts in the current directory
- =C-x f  = :: Open a recently visited file
- =C-x o  = :: Open a file in the current project (based on .git ++)
- =C-x C-s= :: Save this file
- =C-x C-w= :: Save as ...
- =C-x C-j= :: Jump to this files' current directory
- =C-x b  = :: Switch to another open file (buffer)
- =C-x C-b= :: List all open files (buffers)

*** Cut copy and paste

- =C-space= :: Start marking stuff. C-g to cancel.
- =C-w    = :: Cut word backwards
- =C-k    = :: Cut till end of line
- =M-w    = :: Copy (active region or end of line if no active region)
- =C-y    = :: Paste (aka yank)
- =M-y    = :: Cycle last paste through previous kills
- =C-x C-y= :: Choose what to paste from previous kills
- =C-@    = :: Mark stuff quickly. Press multiple times

*** General

- =C-g    = :: Quit any started process
- =M-x    = :: Run a command by name
- =C-.    = :: Autocomplete
- =C-_    = :: Undo
- =M-_    = :: Redo
- =C-x u  = :: Show the undo-tree
- =C-x m  = :: Open magit. It's a magical git interface for emacs

*** Navigation

- =C-arrow= :: Move past words/paragraphs
- =C-a    = :: Go to start of line
- =C-e    = :: Go to end of line
- =M-g M-g= :: Go to line number
- =C-x C-i= :: Go to symbol
- =C-s    = :: Search forward. Press =C-s= again to go further.
- =C-r    = :: Search backward. Press =C-r= again to go further.
- =M-.    = :: Goto definition ...
- =M-,    = :: ... and return
- =M-s-f  = :: Focus at point
- =M-s-d  = :: Duplicate top-level form

*** Search
- =C-c o  = :: List lines matching regexp.
- =S-p f  = :: Fuzzy-find-file-search.

*** Window management

- =C-x 0  = :: Close this window
- =C-x 1  = :: Close other windows
- =C-x 2  = :: Split window horizontally
- =C-x 3  = :: Split window vertically
- =S-arrow= :: Jump to window to the left/right/up/down

*** Help

- =F1 t   = :: Basic tutorial
- =F1 k   = :: Help for a keybinding
- =F1 r   = :: Emacs' extensive documentation

*** Advanced usage

- =C-c j e j= :: copy-edn-as-json
- =C-c j j e= :: copy-json-as-edn

*** Paredit

- =C-<right>= :: Slurp.
- =C-<left> = :: Barf.
- =M-s      = :: Splice list at point.
- =M-<up>   = :: Splice list at point and delete backward.
- =M-<down> = :: Splice list at point and delete forward.

*** Org mode
- =C-c C-t  = :: Create a TODO on a heading.
